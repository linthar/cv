'use strict';

/* http://docs.angularjs.org/guide/dev_guide.e2e-testing */

describe('CV App', function() {
     
  describe('CV Experience list ', function() {
     
    beforeEach(function() {
       browser().navigateTo('../../app/index.html');
    });
     
     
    it('should filter the phone list as user types into the search box', function() {
       expect(repeater('.phones li').count()).toBe(20);
     
       input('query').enter('nexus');
       expect(repeater('.phones li').count()).toBe(1);
     
       input('query').enter('motorola');
       expect(repeater('.phones li').count()).toBe(8);
    });

    it('should display the current filter value within an element with id "status"',
	    function() {
	    expect(element('#status').text()).toMatch(/Current filter: \s*$/);
	     
	    input('query').enter('nexus');
	     
	    expect(element('#status').text()).toMatch(/Current filter: nexus\s*$/);
	     
	    //alternative version of the last assertion that tests just the value of the binding
	    using('#status').expect(binding('query')).toBe('nexus');
    });

	it('should be possible to control phone order via the drop down select box',
		function() {
		//let's narrow the dataset to make the test assertions shorter
		input('query').enter('tablet');

		expect(repeater('.phones li', 'Phone List').column('phone.name')).
		toEqual(["Motorola XOOM\u2122 with Wi-Fi",
		"MOTOROLA XOOM\u2122"]);

		select('orderProp').option('Alphabetical');

		expect(repeater('.phones li', 'Phone List').column('phone.name')).
		toEqual(["MOTOROLA XOOM\u2122",
"Motorola XOOM\u2122 with Wi-Fi"]);
    });


	it('should render phone specific links', function() {
		input('query').enter('nexus');
		element('.phones li a').click();
		expect(browser().location().url()).toBe('/phones/nexus-s');
	});


	 it('should redirect index.html to index.html#/phones', function() {
		browser().navigateTo('../../app/index.html');
		expect(browser().location().url()).toBe('/phones');
	});

  });
});

 describe('Phone detail view', function() {
 
	beforeEach(function() {
		browser().navigateTo('../../app/index.html#/phones/nexus-s');
	});
 
 
	it('should display placeholder page with phoneId', function() {
		expect(binding('phone.name')).toBe('Nexus S');
	});

	it('should display 4 thumbnail images page with phoneId', function() {
		expect(repeater('.phone-thumbs li').count()).toBe(4);
	});


	it('should display the first phone image as the main phone image', function() {
		expect(element('img.phone').attr('src')).toBe('img/phones/nexus-s.0.jpg');
	});
 
 
	it('should swap main image if a thumbnail image is clicked on', function() {
		element('.phone-thumbs li:nth-child(3) img').click();
		expect(element('img.phone').attr('src')).toBe('img/phones/nexus-s.2.jpg');
 
 		element('.phone-thumbs li:nth-child(4) img').click();
		expect(element('img.phone').attr('src')).toBe('img/phones/nexus-s.3.jpg');
 
		element('.phone-thumbs li:nth-child(1) img').click();
		expect(element('img.phone').attr('src')).toBe('img/phones/nexus-s.0.jpg');
	});

});


describe('UserForm App', function() {

	beforeEach(function() {
		browser().navigateTo('../../app/index.html#/userForm');
	});
     
  describe('User Form view', function() {
    it('should enable save button', function() {
	    expect(element(':button:contains(Save)').attr('disabled')).toBeTruthy();
	    input('form.name').enter('');
	    expect(element(':button:contains(Save)').attr('disabled')).toBeTruthy();
	    input('form.name').enter('change');
	    expect(element(':button:contains(Save)').attr('disabled')).toBeFalsy();
	    element(':button:contains(Save)').click();
	    expect(element(':button:contains(Save)').attr('disabled')).toBeTruthy();
    });
    it('should enable cancel button', function() {
	    expect(element(':button:contains(Cancel)').attr('disabled')).toBeTruthy();
	    input('form.name').enter('change');
	    expect(element(':button:contains(Cancel)').attr('disabled')).toBeFalsy();
	    element(':button:contains(Cancel)').click();
	    expect(element(':button:contains(Cancel)').attr('disabled')).toBeTruthy();
	    expect(element(':input[ng\\:model="form.name"]').val()).toEqual('John Smith');
    });

	});

});
